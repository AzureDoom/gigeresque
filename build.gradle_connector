plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.modrinth.minotaur.dependencies.ModDependency

base {
    archivesName = project.modNameConnector
}
version = project.modVersion
group = project.mavenGroup

repositories {
	maven { url 'https://cfa2.cursemaven.com' }
	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://maven.terraformersmc.com' }
	maven { url 'https://libs.azuredoom.com:4443/mods'}
	maven { url 'https://dl.cloudsmith.io/public/tslat/sbl/maven/' }
	maven { url 'https://maven.blamejared.com' }
	maven { url 'https://plugins.gradle.org/m2/' }
	maven { url 'https://maven.gegy.dev' }
	maven { url 'https://maven.enginehub.org/repo/' }
	maven { url 'https://plugins.gradle.org/m2/' }
	maven { url 'https://api.modrinth.com/maven' }
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraftVersion}"
    mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loaderVersion}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}"
  	modImplementation "mod.azure.azurelib:azurelib-fabric-${project.minecraftVersion}:${project.azurelibVersion}"
	include "mod.azure.azurelib:azurelib-fabric-${project.minecraftVersion}:${project.azurelibVersion}"
	modCompileOnly "com.terraformersmc:modmenu:${project.modmenuVersion}"
	modImplementation "net.tslat.smartbrainlib:SmartBrainLib-fabric-${project.minecraftVersion}:${project.sblVersion}"
	modImplementation "net.tslat.smartbrainlib:SmartBrainLib-common-${project.minecraftVersion}:${project.sblVersion}"
	modCompileOnly "software.bernie.geckolib:geckolib-fabric-${project.minecraftVersion}:${project.geckolibVersion}"
	modImplementation "mod.azuredoom.bettercrawling:better-crawling-fabric-1.20.1:1.0.2" 
	include "mod.azuredoom.bettercrawling:better-crawling-fabric-1.20.1:1.0.2" 
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

loom {
	accessWidenerPath = file("src/main/resources/gigeresque.accesswidener")
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

if (file('key.properties').exists()) {
    curseforge {

    	def curseProp = new Properties()
    	File secretPropsFile = file("key.properties")
    	curseProp.load(secretPropsFile.newInputStream())

    	project {
        	apiKey = curseProp.getProperty('curseKey')
        	id = project.curseforgeID
        	releaseType = "release"
        	changelogType = 'text'
        	changelog = file('CHANGELOG.txt')
			addGameVersion(project.minecraftVersion)
			addGameVersion("Forge")
			addGameVersion("Java 17")

        	relations {
            	requiredDependency 'forgified-fabric-api'  
            	requiredDependency 'sinytra-connector'  
            	requiredDependency 'smartbrainlib' 
            	optionalDependency 'waterdripsound'
            	optionalDependency 'sound-physics-remastered'
            	optionalDependency 'ad-astra'
            	optionalDependency 'aftershock'
            	optionalDependency 'arachnids'
            	optionalDependency 'happiness-is-a-warm-gun'
            	optionalDependency 'jar-jar-binks'
            	optionalDependency 'living-things'
            	optionalDependency 'caracal-mod'
            	optionalDependency 'illager-invasion'
            	optionalDependency 'minecraft-comes-alive-mca'
            	optionalDependency 'the-twilight-forest'
            	optionalDependency 'the-graveyard-forge'
            	optionalDependency 'alexs-mobs'
            	optionalDependency 'friends-and-foes-forge'
            	optionalDependency 'cave-dweller-evolved'
            	optionalDependency 'aether'
        	}
        	mainArtifact(remapJar)

        	afterEvaluate {
            	uploadTask.dependsOn("remapJar")
        	}
    	}
    	options {
        	forgeGradleIntegration = false
    	}
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = project. modrinthID
		versionNumber = project.modVersion 
		uploadFile = remapJar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.20.1']
		loaders = ['forge']
		dependencies { 
        	required.project "connector"
        	required.project "forgified-fabric-api"
        	required.project "smartbrainlib"
            optional.project "waterdripsound"
            optional.project "sound-physics-remastered"
            optional.project "ad-astra"
            optional.project "aftershock"
            optional.project "arachnids"
            optional.project "happiness-is-a-warm-gun"
            optional.project "jar-jar-binks"
            optional.project "living-things"
            optional.project "betterend"
            optional.project "caracal_mob"
            optional.project "illager-invasion"
            optional.project "minecraft-comes-alive-reborn"
            optional.project "the-graveyard-forge"
            optional.project "friends-and-foes-forge"
            optional.project "aether"
   		}
	}
}